rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Documents: users can only access their own documents
    match /documents/{docId} {
      allow read, write: if request.auth != null 
                         && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.uid;
      
      // Document chunks: nested under documents, same access rules
      match /chunks/{chunkId} {
        allow read, write: if request.auth != null 
                           && request.auth.uid == resource.data.uid;
        allow create: if request.auth != null 
                      && request.auth.uid == request.resource.data.uid;
      }
    }
    
    // Chat sessions: users can only access their own sessions
    match /sessions/{sessionId} {
      allow read, write: if request.auth != null 
                         && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.uid;
      
      // Chat messages: nested under sessions, same access rules
      match /messages/{messageId} {
        allow read, write: if request.auth != null 
                           && request.auth.uid == get(/databases/$(database)/documents/sessions/$(sessionId)).data.uid;
        allow create: if request.auth != null 
                      && request.auth.uid == get(/databases/$(database)/documents/sessions/$(sessionId)).data.uid;
      }
    }
  }
}
